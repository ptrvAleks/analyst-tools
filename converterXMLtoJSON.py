import json
import xmltodict
import streamlit as st

def detect_format(text: str) -> str:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç: JSON –∏–ª–∏ XML"""
    try:
        json.loads(text)
        return "json"
    except json.JSONDecodeError:
        try:
            xmltodict.parse(f"<root>{text}</root>")  # –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            return "xml"
        except Exception:
            return "unknown"

def convert_json_to_xml(json_str: str, wrap_root: bool = True) -> str:
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç JSON –≤ XML, —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —É–±—Ä–∞—Ç—å root"""
    obj = json.loads(json_str)
    if wrap_root:
        obj = {"root": obj}
    xml_str = xmltodict.unparse(obj, pretty=True)
    if not wrap_root:
        # —É–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—É—é –∏ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É <root>...</root>
        lines = xml_str.strip().splitlines()
        xml_str = "\n".join(lines[1:-1])
    return xml_str

def convert_xml_to_json(xml_str: str) -> str:
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç XML –≤ JSON, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è multiple roots"""
    wrapped = f"<root>{xml_str}</root>"
    obj = xmltodict.parse(wrapped)
    root = obj["root"]
    # –µ—Å–ª–∏ –∫–æ—Ä–µ–Ω—å ‚Äî —Å–ø–∏—Å–æ–∫ –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    result = root if isinstance(root, (list, dict)) else {"root": root}
    return json.dumps(result, indent=2, ensure_ascii=False)

def run_converter():
    st.header("üîÅ –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä JSON ‚áÑ XML —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π multiple roots")

    input_text = st.text_area("–í–≤–µ–¥–∏—Ç–µ JSON –∏–ª–∏ XML:", height=300)
    wrap = st.checkbox("–û–±–æ—Ä–∞—á–∏–≤–∞—Ç—å JSON –≤ <root>", value=True)

    if st.button("–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å"):
        if not input_text.strip():
            st.warning("–ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø—É—Å—Ç–æ–µ.")
            return

        fmt = detect_format(input_text)
        try:
            if fmt == "json":
                result = convert_json_to_xml(input_text, wrap_root=wrap)
                st.success("–†–µ–∑—É–ª—å—Ç–∞—Ç (XML):")
                st.code(result, language="xml")
            elif fmt == "xml":
                result = convert_xml_to_json(input_text)
                st.success("–†–µ–∑—É–ª—å—Ç–∞—Ç (JSON):")
                st.code(result, language="json")
            else:
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –∏–ª–∏ XML.")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")