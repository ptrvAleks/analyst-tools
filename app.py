import streamlit as st
from account import show_login
from json_utils import count_root_objects, validate_json

def run_json_tool():
    st.header("JSON-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä")

    json_text = st.text_area("–í—Å—Ç–∞–≤—å—Ç–µ JSON‚Äì—Ç–µ–∫—Å—Ç —Å—é–¥–∞:", height=200)

    col1, col2 = st.columns(2)
    with col1:
        check_btn = st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å JSON")
    with col2:
        clear_btn = st.button("–û—á–∏—Å—Ç–∏—Ç—å")

    if clear_btn:
        st.rerun()

    if check_btn:
        result = validate_json(json_text)

        if result["ok"]:
            parsed_json = result["data"]
            count = count_root_objects(json_text)

            st.success("‚úÖ JSON –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
            st.info(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ: {count}")

            st.subheader("–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON:")
            st.json(parsed_json)
        else:
            st.error("‚ùå –û—à–∏–±–∫–∞ –≤ JSON:")
            st.code(result["error"], language="plaintext")

            # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å —Å—Ç—Ä–æ–∫—É –æ—à–∏–±–∫–∏
            import re
            match = re.search(r'—Å—Ç—Ä–æ–∫–∞ (\d+)', result["error"])
            if match:
                line_num = int(match.group(1))
                st.warning(f"–û—à–∏–±–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç—Ä–æ–∫–µ: {line_num}")

                lines = json_text.splitlines()
                start = max(0, line_num - 5)
                end = min(len(lines), line_num + 4)

                snippet = []
                for i in range(start, end):
                    line_prefix = f"{i+1:>4}: "
                    if i + 1 == line_num:
                        # –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ —Å –æ—à–∏–±–∫–æ–π
                        snippet.append(f"{line_prefix}üëâ {lines[i]}")
                    else:
                        snippet.append(f"{line_prefix}   {lines[i]}")

                st.subheader("–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ (¬±4 —Å—Ç—Ä–æ–∫–∏):")
                st.code("\n".join(snippet), language="json")
            else:
                st.info("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É —Å –æ—à–∏–±–∫–æ–π.")

def run_db_tool():
    st.header("–†–∞–±–æ—Ç–∞ —Å –ë–î (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)")
    st.info("–ó–¥–µ—Å—å –ø–æ–∑–∂–µ –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –≤–∞—à–µ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.")

def main():
    if not st.session_state.get("authenticated", False):
        show_login()
        st.stop()

    st.sidebar.title("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
    choice = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:", ["–ü—Ä–æ–≤–µ—Ä–∫–∞ JSON", "–†–∞–±–æ—Ç–∞ —Å –ë–î"])

    if choice == "–ü—Ä–æ–≤–µ—Ä–∫–∞ JSON":
        run_json_tool()
    elif choice == "–†–∞–±–æ—Ç–∞ —Å –ë–î":
        run_db_tool()

if __name__ == "__main__":
    main()